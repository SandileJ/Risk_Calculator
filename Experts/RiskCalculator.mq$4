//+------------------------------------------------------------------+
//|                                                      RiskCalc.mq4|
//|                        Copyright 2023, MetaQuotes Software Corp. |
//|                                       https://www.mql5.com       |
//+------------------------------------------------------------------+
#property strict

double LotSize;
double PotentialProfit;

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
   // Create labels and edit fields for user input
   CreateLabel("RiskAmountLabel", "Risk Amount ($):", 10, 10, clrWhite);
   CreateEditField("RiskAmountValue", "5", 150, 10, clrWhite);
   CreateLabel("StopLossLabel", "Stop Loss Price:", 10, 40, clrRed);
   CreateEditField("StopLossValue", DoubleToString(Ask - 0.0010, Digits), 150, 40, clrWhite);

   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
   // Cleanup code if needed
   Comment(""); // Clear the comment on deinitialization

   // Delete labels and edit fields
   ObjectDelete("RiskAmountLabel");
   ObjectDelete("RiskAmountValue");
   ObjectDelete("StopLossLabel");
   ObjectDelete("StopLossValue");
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
   // Get the current Ask and Bid prices
   double currentAsk = Ask;
   double currentBid = Bid;

   // Read values from edit fields
   double RiskAmount = StrToDouble(ObjectGetString(0, "RiskAmountValue", OBJPROP_TEXT));
   double StopLossPrice = StrToDouble(ObjectGetString(0, "StopLossValue", OBJPROP_TEXT));

   // Recalculate risk based on updated values
   CalculateRisk(RiskAmount, StopLossPrice, currentAsk);

   // Update the display on each tick
   Comment("Current Ask: ", currentAsk, "\nCurrent Bid: ", currentBid, "\nRisk Amount: $", RiskAmount, "\nStop Loss Price: ", StopLossPrice, "\n\nCalculated Lot Size: ", LotSize);
  }
//+------------------------------------------------------------------+
//| Function to calculate risk                                       |
//+------------------------------------------------------------------+
void CalculateRisk(double RiskAmount, double StopLossPrice, double currentAsk)
  {
   // Calculate the stop loss in pips
   double StopLossPips = MathAbs(currentAsk - StopLossPrice) / Point;

   // Calculate the lot size
   LotSize = RiskAmount / (StopLossPips * MarketInfo(Symbol(), MODE_TICKVALUE));

   // Output the calculated lot size
   Print("Calculated Lot Size: ", LotSize);
  }
//+------------------------------------------------------------------+
//| Function to create a label                                       |
//+------------------------------------------------------------------+
void CreateLabel(string name, string text, int x, int y, color labelColor)
  {
   if (!ObjectCreate(0, name, OBJ_LABEL, 0, 0, 0))
     {
      Print("Failed to create label: ", name);
      return;
     }
   ObjectSetInteger(0, name, OBJPROP_XDISTANCE, x);
   ObjectSetInteger(0, name, OBJPROP_YDISTANCE, y);
   ObjectSetInteger(0, name, OBJPROP_CORNER, CORNER_RIGHT_UPPER);
   ObjectSetInteger(0, name, OBJPROP_COLOR, labelColor);
   ObjectSetInteger(0, name, OBJPROP_FONTSIZE, 12);
   ObjectSetString(0, name, OBJPROP_TEXT, text);
  }
//+------------------------------------------------------------------+
//| Function to create an edit field                                 |
//+------------------------------------------------------------------+
void CreateEditField(string name, string text, int x, int y, color fieldColor)
  {
   if (!ObjectCreate(0, name, OBJ_EDIT, 0, 0, 0))
     {
      Print("Failed to create edit field: ", name);
      return;
     }
   ObjectSetInteger(0, name, OBJPROP_XDISTANCE, x);
   ObjectSetInteger(0, name, OBJPROP_YDISTANCE, y);
   ObjectSetInteger(0, name, OBJPROP_CORNER, CORNER_RIGHT_UPPER);
   ObjectSetInteger(0, name, OBJPROP_COLOR, fieldColor);
   ObjectSetInteger(0, name, OBJPROP_FONTSIZE, 12);
   ObjectSetString(0, name, OBJPROP_TEXT, text);
  }
//+------------------------------------------------------------------+