//+------------------------------------------------------------------+
//|                                                      RiskCalculator.mq4 |
//|                        Copyright 2023, MetaQuotes Software Corp. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property strict

// Input parameters
input double RiskAmount = 20.0; // Risk amount per trade
input double AccountBalance = 100.0; // Account balance
input double StopLossPrice = 0.0; // User-defined stop loss price
input bool IsBuy = true; // True for buy position, false for sell position

// Global variables
double LotSize;

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
   // Output the risk amount and account balance
   Print("Risk Amount: ", RiskAmount);
   Print("Account Balance: ", AccountBalance);

   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
   // Cleanup code here
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
   // Get the current price based on the position type
   double currentPrice = IsBuy ? MarketInfo(Symbol(), MODE_ASK) : MarketInfo(Symbol(), MODE_BID);

   // Ensure the user has set a valid stop loss price
   if (StopLossPrice <= 0)
   {
      Print("Please set a valid stop loss price.");
      return;
   }

   // Calculate the stop loss in pips
   double StopLossPips = MathAbs(currentPrice - StopLossPrice) / Point;

   // Calculate the lot size
   LotSize = RiskAmount / (StopLossPips * MarketInfo(Symbol(), MODE_TICKVALUE));

   // Output the calculated lot size
   Print("Calculated Lot Size: ", LotSize);
  }
//+------------------------------------------------------------------+
//| Function to create a label                                       |
//+------------------------------------------------------------------+
void CreateLabel(string name, string text, int x, int y, color labelColor = clrGreen)
  {
   if (!ObjectCreate(0, name, OBJ_LABEL, 0, 0, 0))
     {
      Print("Failed to create label: ", name);
      return;
     }
   ObjectSetInteger(0, name, OBJPROP_XDISTANCE, x);
   ObjectSetInteger(0, name, OBJPROP_YDISTANCE, y);
   ObjectSetInteger(0, name, OBJPROP_CORNER, CORNER_RIGHT_UPPER);
   ObjectSetInteger(0, name, OBJPROP_COLOR, labelColor);
   ObjectSetInteger(0, name, OBJPROP_FONTSIZE, 12);
   ObjectSetString(0, name, OBJPROP_TEXT, text);
  }
//+------------------------------------------------------------------+
//| Function to create an edit field                                 |
//+------------------------------------------------------------------+
void CreateEditField(string name, int x, int y, int width, int height, string initialText)
  {
   if (!ObjectCreate(0, name, OBJ_EDIT, 0, 0, 0))
     {
      Print("Failed to create edit field: ", name);
      return;
     }
   ObjectSetInteger(0, name, OBJPROP_XDISTANCE, x);
   ObjectSetInteger(0, name, OBJPROP_YDISTANCE, y);
   ObjectSetInteger(0, name, OBJPROP_XSIZE, width);
   ObjectSetInteger(0, name, OBJPROP_YSIZE, height);
   ObjectSetString(0, name, OBJPROP_TEXT, initialText);
  }
//+------------------------------------------------------------------+